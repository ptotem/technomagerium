<div id="game_wrapper">
  <%= image_tag "#{@theme}.jpg", :class => "background" %>

  <!-- The current wallet of the player -->
  <div id="wallet" class="<%= @theme %>_text">
    <span id="magic_wallet"><%= current_user.mana %></span> <%= image_tag "magic.png" %><%= image_tag "techno.png" %>
    <span id="techno_wallet"><%= current_user.power %></span>
  </div>

  <!-- The Target to be achieved-->
  <div id="target_back"></div>
  <div id="target">

    <!-- Name and Reward Value for the Target-->
    <div id="puzzlename" style="height:110px;">
      <h2 style="margin: 10px;">
        <%= @game.puzzle.name %>
        <div id="reward_table">
          <%= @game.puzzle.mana_reward unless @game.puzzle.mana_reward==0 %> <%= image_tag "magic.png" unless @game.puzzle.mana_reward==0 %><%= image_tag "techno.png" unless @game.puzzle.power_reward==0 %> <%= @game.puzzle.power_reward unless @game.puzzle.power_reward==0 %>
        </div>
      </h2>
    </div>

    <!-- Content Area for displaying clues. Default is Target Image-->
    <div id="content_area">
      <div class="target_image"><%= image_tag @game.puzzle.avatar.url(:original) %></div>
      <div id="content_block">
        <span class="closing_cross" onclick="clue_deselect()">&times;</span><br>

        <div id="actual_content"></div>
      </div>
    </div>

    <!-- Clue Buttons -->
    <div id="clue_buttons">
      <%= image_tag "lore#{@lock_status[0]}.jpg", :id => "lore", :class => "clue status#{@lock_status[0]}" %>
      <%= image_tag "count#{@lock_status[1]}.jpg", :id => "count", :class => "clue status#{@lock_status[1]}" %>
      <%= image_tag "chance#{@lock_status[2]}.jpg", :id => "chance", :class => "clue status#{@lock_status[2]}" %>
    </div>

  </div>

  <div id="alchemy_container">
    <div id="alchemy_center"><%= image_tag "mixer_#{@theme}.png" %></div>
  </div>

  <%= link_to image_tag("tome_menu.gif"), tome_show_path(@game.puzzle.tome.id), :id => "back_button" %>

</div>

<script type="text/javascript">

    var checker = "00000000";

    $(function () {

        var alchemy_element_array = [];
        alchemy_element_array = gon.elements;

        setTimeout(function () {
            $('#game_wrapper').fadeIn('slow', function () {

                // Create the circle of elements

                createFields(alchemy_element_array);
                distributeFields(95, 55);

                // Set up the game as finished if the game has been completed

                $.ajax({
                    url:"/games/" + gon.game_id + "/status",
                    type:"get",
                    success:function (returning_data) {
                        if (returning_data.split("||")[0] == 'true') {
                            $.each(returning_data.split("||")[1].split(","), function (index, element) {
                                $('#' + (parseInt(element) - 1)).addClass("img-swap");
                            });
                            solved();
                        } else {
                            $('.alchemy_elements').on('click', switch_element);
                            $('.clue').on('click', function () {
                                $('#actual_content').removeClass('lore_text');
                                show_content($(this).attr("id"));
                            });
                        }
                    }
                });

                // Check for the combination once the center is clicked

                $('#alchemy_center').on("click", function () {
                    $('#alchemy_center').animate({
                        rotate:'720deg'
                    }, 2000, function () {
                        check_combo(checker);
                    });
                });


            });
        }, 500);
    })
</script>

